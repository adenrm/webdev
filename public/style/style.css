/* .bb::before, .bb::after, .bb {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 100px;
}

.bb {
  width: 600px;
  height: 400px;
  margin: auto;
  background: url("//blog.codepen.io/wp-content/uploads/2012/06/Button-White-Large.png") no-repeat 50%/70% rgba(0, 0, 0, 0.1);
  color: #69ca62;
  box-shadow: inset 0 0 0 1px rgba(105, 202, 98, 0.5);
}
.bb::before, .bb::after {
  content: "";
  z-index: -1;
  margin: -5%;
  box-shadow: inset 0 0 0 2px;
  animation: clipMe 8s linear infinite;
}
.bb::before {
  animation-delay: -4s;
}
.bb:hover::after, .bb:hover::before {
  background-color: rgba(255, 0, 0, 0.3);
}

@keyframes clipMe {
  0%, 100% {
    clip: rect(0px, 220px, 2px, 0px);
  }
  25% {
    clip: rect(0px, 2px, 220px, 0px);
  }
  50% {
    clip: rect(218px, 220px, 220px, 0px);
  }
  75% {
    clip: rect(0px, 220px, 220px, 218px);
  }
}
html,
body {
  height: 100%;
}

body {
  position: relative;
  background-color: #0f222b;
}

*,
*::before,
*::after {
  box-sizing: border-box;
} */
@media only screen and (max-width: 800px) {
  .container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  }
}
.neon-button {
  position: relative;
  display: inline-block;
  font-size: 1.5em;
  letter-spacing: .1em;
  color: #0ef;
  text-decoration: none;
  text-transform: uppercase;
  border: 2px solid #0ef;
  padding: 10px 30px;
  z-index: 1;
  overflow: hidden;
  transition: color 1s, box-shadow 1s;
}
.neon-button:hover {
  transition-delay: 0s, 0.3s;
  color: black;
  box-shadow:
      0 0 10px #0ef,
      0 0 20px #0ef,
      0 0 40px #0ef,
      0 0 80px #0ef,
      0 0 160px #0ef;
}
.neon-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -50px;
  width: 0;
  height: 100%;
  background: #0ef;
  transform: skewX(35deg);
  z-index: -1;
  transition: 1s;
}
.neon-button:hover:before {
  width: 100%;
}

.neon-button-dark {
  position: relative;
  display: inline-block;
  font-size: 1.5em;
  letter-spacing: .1em;
  color: #0ef;
  text-decoration: none;
  text-transform: uppercase;
  border: 2px solid #0ef;
  padding: 10px 30px;
  z-index: 1;
  overflow: hidden;
  transition: color 1s, box-shadow 1s;
}
.neon-button-dark:hover {
  transition-delay: 0s, 0.3s;
  color: white;
  box-shadow:
      0 0 20px #0ef,
      0 0 30px #0ef,
      0 0 50px #0ef,
      0 0 100px #0ef,
      0 0 200px #0ef;
}
.neon-button-dark::before {
  content: '';
  position: absolute;
  top: 0;
  left: -50px;
  width: 0;
  height: 100%;
  background: #0ef;
  transform: skewX(35deg);
  z-index: -1;
  transition: 1s;
}
.neon-button-dark:hover:before {
  width: 100%;
}

/* Cool Dropdown */
.box {
  position: relative;
  width: 250px;
  height: 250px;
}

.drop-adv {
  /* position: relative; */
  width: 100%;
  height: 60px;
  /* background: rgb(15 118 110); */
  color: black;
  /* font-size: 22px; */
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 5px;
  cursor: pointer;
  /* box-shadow: 0 5px 10px rgba(0, 0, 0, .2); */
}

.drop-adv .left-icon,
.drop-adv .right-icon {
  position: relative;
  top: 2px;
  display: inline-block;
  width: 12px;
  height: 5px;
  background: black;
  border-radius: 40px;
  transition: .5s;
}

.drop-adv .left-icon {
  left: 7px;
  transform: rotate(45deg);
}

.drop-adv.active .left-icon {
  transform: rotate(135deg);
}

.drop-adv .right-icon {
  transform: rotate(-45deg);
}

.drop-adv.active .right-icon {
  transform: rotate(-135deg);
}

.drop-adv .items {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 160px;
  /* margin-top: 63px; */
  overflow: hidden;
  visibility: hidden;
  transition: .5s;
}

.drop-adv.active .items {
  visibility: visible;
}

.drop-adv .items a {
  position: relative;
  left: 100%;
  display: flex;
  font-size: 20px;
  background: #fff;
  color: rgb(15 118 110);
  text-decoration: none;
  border-radius: 5px;
  padding: 10px 15px;
  margin-top: 2.5px;
  z-index: 1;
  overflow: hidden;
  transition: .5s;
  transition-delay: calc(60ms * var(--i));
}

.drop-adv.active .items a {
  left: 0;
}

.drop-adv .items a:hover {
  color: #fff;
}

.drop-adv .items a span {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgb(15 118 110);
  z-index: -1;
  border-radius: inherit;
  transform: rotate(160deg);
  transform-origin: right;
  transition: .5s;
}

.drop-adv .items a:hover span {
  transform: rotate(0deg);
}

/* End Dropdown */

@keyframes scroll {
  from {
    opacity: 0;
    scale: 0.5;
    left: 50%;
  }
  to {
    opacity: 1;
    scale: 1;
    left: 0%;
  }
}

.scroll {
  animation: scroll linear;
  animation-timeline: view();
  animation-range: entry 0 cover 50%;
}



.text-focus-in {
	animation: text-focus-in 1s cubic-bezier(0.550, 0.085, 0.680, 0.530) both;
    animation-timeline: view();
    animation-range: entry 0 cover 50%;
}
 @keyframes text-focus-in {
    0% {
      filter: blur(12px);
      opacity: 0;
    }
    100% {
      filter: blur(0px);
      opacity: 1;
    }
  }

  .text-blur-out {
    animation: text-blur-out 1.2s cubic-bezier(0.550, 0.085, 0.680, 0.530) both;
    animation-timeline: view();
    animation-range: entry 0 cover 50%;
  }
  @keyframes text-blur-out {
    0% {
      filter: blur(0.01);
    }
    100% {
      filter: blur(12px) opacity(0%);
    }
  }

  .slide-out-blurred-top {
	animation: slide-out-blurred-top 0.45s cubic-bezier(0.755, 0.050, 0.855, 0.060) both;
}
 @keyframes slide-out-blurred-top {
    0% {
      transform: translateY(0) scaleY(1) scaleX(1);
      transform-origin: 50% 0%;
      filter: blur(0);
      opacity: 1;
    }
    100% {
      transform: translateY(-1000px) scaleY(2) scaleX(0.2);
      transform-origin: 50% 0%;
      filter: blur(40px);
      opacity: 0;
    }
  }
  
  .text-shadow-drop-center {
	animation: text-shadow-drop-center 0.6s both;
}
@keyframes text-shadow-drop-center {
    0% {
      text-shadow: 0 0 0 rgba(0, 0, 0, 0);
    }
    100% {
      text-shadow: 0 0 18px rgba(0, 0, 0, 0.35);
    }
  }

  /* .roll-in-blurred-right {
	animation: roll-in-blurred-right 0.65s cubic-bezier(0.230, 1.000, 0.320, 1.000) both;
    animation-timeline: view();
    animation-range: entry 0 cover 50%;
}
@keyframes roll-in-blurred-right {
    0% {
      transform: translateX(1000px) rotate(720deg);
      filter: blur(50px);
      opacity: 0;
    }
    100% {
      transform: X(0) rotate(0deg);
      filter: blur(0);
      opacity: 1;
    }
  } */
  
.vibrate-3 {
	animation: vibrate-3 0.5s linear infinite both;
}
/* ----------------------------------------------
 * Generated by Animista on 2024-9-30 14:20:55
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

/**
 * ----------------------------------------
 * animation vibrate-3
 * ----------------------------------------
 */
 @keyframes vibrate-3 {
  0% {
    transform: translate(0);
  }
  10% {
    transform: translate(-2px, -2px);
  }
  20% {
    transform: translate(2px, -2px);
  }
  30% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(2px, 2px);
  }
  50% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, -2px);
  }
  70% {
    transform: translate(-2px, 2px);
  }
  80% {
    transform: translate(-2px, -2px);
  }
  90% {
    transform: translate(2px, -2px);
  }
  100% {
    transform: (0);
  }
}


.card-border{
  margin: 0 auto;
  padding: 2em;
  width: 300px;
  background: #1c1f2b;
  text-align: center;
  border-radius: 10px;
  position: relative;
}

@property --angle{
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

.card-border::after, .card-border::before{
  content: '';
  position: absolute;
  height: 100%;
  width: 100%;
  background-image: conic-gradient(from var(--angle), #ff4545, #00ff99, #006aff, #ff0095, #ff4545);
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  z-index: -1;
  padding: 5px;
  border-radius: 10px;
  animation: 3s spin linear infinite;
}
.card-border::before{
  filter: blur(1.5rem);
  opacity: 0.5;
}
@keyframes spin{
  from{
    --angle: 0deg;
  }
  to{
    --angle: 360deg;
  }
}